name: VSCode extension Tests

on:
    workflow_call:
        inputs:
            os:
                required: true
                type: string
            node-version:
                required: true
                type: string
            vscode-version:
                required: true
                type: string

jobs:
    test-sdk:
        name: Test Databricks SDK
        runs-on: ${{ inputs.os }}

        defaults:
            run:
                shell: bash
                working-directory: packages/databricks-sdk-js
        env:
            DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
            DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
            TEST_DEFAULT_CLUSTER_ID: ${{ secrets.TEST_DEFAULT_CLUSTER_ID }}
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ inputs.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ inputs.node-version }}
                  cache: "yarn"

            - run: yarn install --immutable

            - name: Building packages
              run: yarn run build

            - name: Prettier and Linting
              run: yarn run test:lint

            - name: Unit Tests With Code Cov
              run: yarn test:cov

            - name: Integration Tests
              uses: nick-fields/retry@v2
              with:
                  max_attempts: 3
                  retry_wait_seconds: 2
                  timeout_minutes: 10
                  retry_on: any
                  command: yarn run test:integ:cov

            - run: |
                  cd coverage
                  mkdir -p all && mkdir -p final
                  mv integration/coverage-final.json all/integration.json
                  mv unit/coverage-final.json all/unit.json
                  yarn nyc merge all final/final.json
                  yarn nyc report --reporter text -t ./coverage/final >> $GITHUB_STEP_SUMMARY

    test-extension:
        name: Test VSCode Extension
        runs-on: ${{ inputs.os }}
        needs: [test-sdk]

        env:
            VSCODE_TEST_VERSION: ${{ inputs.vscode-version }}
            DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
            DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
            TEST_DEFAULT_CLUSTER_ID: ${{ secrets.TEST_DEFAULT_CLUSTER_ID }}

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ inputs.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ inputs.node-version }}
                  cache: "yarn"

            - run: yarn install --immutable

            - name: Prettier and Linting
              run: yarn run test:lint
              working-directory: packages/databricks-vscode

            - name: Building packages
              run: yarn run build

            - name: Unit Tests with Coverage (OSX)
              uses: GabrielBB/xvfb-action@v1
              if: inputs.os != 'windows-latest'
              with:
                  run: yarn run test:cov
                  working-directory: packages/databricks-vscode

            - name: Unit Tests with Coverage (Windows)
              if: inputs.os == 'windows-latest'
              run: yarn run test:cov
              working-directory: packages/databricks-vscode

            - name: Show coverage test result
              continue-on-error: true
              run: yarn nyc report --reporter text -t ./coverage >> $GITHUB_STEP_SUMMARY
              working-directory: packages/databricks-vscode

            - name: Integration Tests
              uses: nick-fields/retry@v2
              with:
                  max_attempts: 3
                  retry_wait_seconds: 2
                  timeout_minutes: 10
                  retry_on: any
                  command: |
                      yarn workspace databricks run test:integ:clean
                      yarn install --immutable
                      yarn build
                      cd packages/databricks-vscode
                      yarn run test:integ

            - name: Upload test logs
              if: always()
              continue-on-error: true
              uses: actions/upload-artifact@v3
              with:
                  name: test-logs ${{ join(inputs.*, ' - ') }} - ${{ github.event_name }}
                  path: packages/databricks-vscode/src/test/logs
