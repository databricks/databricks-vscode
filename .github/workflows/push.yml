name: VSCode Extensions CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    unit-test-sdk:
        name: Unit Test Databricks SDK
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest]
                node-version: [14.x, 18.x]

        defaults:
            run:
                shell: bash
                working-directory: packages/databricks-sdk-js

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "yarn"

            - run: yarn install --immutable

            - name: Building packages
              run: yarn run build

            - name: Prettier and Linting
              run: yarn run test:lint

            - name: Unit Tests
              run: yarn test:run

    integ-test-sdk:
        name: Integration Test Databricks SDK
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: packages/databricks-sdk-js

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js 18.x
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  cache: "yarn"

            - run: yarn install --immutable

            - name: Integration Tests
              run: yarn run test:integ
              env:
                  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
                  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
                  DATABRICKS_CLUSTER_ID: ${{ secrets.DATABRICKS_CLUSTER_ID }}

    test-extension:
        name: Test VSCode Extension
        runs-on: ${{ matrix.os }}
        needs: [unit-test-sdk, integ-test-sdk]

        strategy:
            matrix:
                os: [windows-latest, macos-latest]
                node-version: [16.x]
                vscode-version: [stable, insiders]

        env:
            VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "yarn"

            - run: yarn install --immutable

            - name: Prettier and Linting
              run: yarn run test:lint
              working-directory: packages/databricks-vscode

            - name: Building packages
              run: yarn run build

            - run: yarn run test:compile
              working-directory: packages/databricks-vscode

            - name: Tests (OSX)
              uses: GabrielBB/xvfb-action@v1
              if: matrix.os != 'windows-latest'
              with:
                  run: yarn run test:unit
                  working-directory: packages/databricks-vscode

            - name: Tests (Windows)
              if: matrix.os == 'windows-latest'
              run: yarn run test:unit
              working-directory: packages/databricks-vscode

            - name: Prepare Integration Tests
              uses: nick-fields/retry@v2
              with:
                  max_attempts: 3
                  retry_wait_seconds: 2
                  timeout_minutes: 2
                  retry_on: error
                  command: |
                      cd packages/databricks-vscode
                      yarn run test:integ:prepare

            - name: Integration Tests
              run: yarn run test:integ:run
              working-directory: packages/databricks-vscode
              env:
                  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
                  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
                  DATABRICKS_CLUSTER_ID: ${{ secrets.DATABRICKS_CLUSTER_ID }}

    package:
        name: Package VSIX
        needs: "test-extension"
        runs-on: "macos-latest"
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "yarn"

            - run: yarn install --immutable

            - name: Building packages
              run: yarn run build

            - run: mkdir -p packages/databricks-vscode/artifacts

            - name: Build VSIX
              run: yarn workspace databricks vscode:package -o artifacts

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: VSIX artifacts
                  path: packages/databricks-vscode/artifacts
